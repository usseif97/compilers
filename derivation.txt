METHOD_BODY 
STATEMENT_LIST 
STATEMENT STATEMENT_LIST1 
DECLARATION STATEMENT_LIST1 
PRIMITIVE_TYPE 'id' ';' STATEMENT_LIST1 
'int' 'id' ';' STATEMENT_LIST1 
int 'id' ';' STATEMENT_LIST1 
int id ';' STATEMENT_LIST1 
int id ; STATEMENT_LIST1 
int id ; STATEMENT STATEMENT_LIST1 
int id ; ASSIGNMENT STATEMENT_LIST1 
int id ; 'id' '=' EXPRESSION ';' STATEMENT_LIST1 
int id ; id '=' EXPRESSION ';' STATEMENT_LIST1 
Error parsing: = is missing. Inserting
int id ; id = EXPRESSION ';' STATEMENT_LIST1 
Error parsing: Illegal EXPRESSION. Discarding assign.
int id ; id = EXPRESSION ';' STATEMENT_LIST1 
int id ; id = SIMPLE_EXPRESSION EXPRESSIONSIMPLE_EXPRESSION ';' STATEMENT_LIST1 
int id ; id = TERM SIMPLE_EXPRESSION1 EXPRESSIONSIMPLE_EXPRESSION ';' STATEMENT_LIST1 
int id ; id = FACTOR TERM1 SIMPLE_EXPRESSION1 EXPRESSIONSIMPLE_EXPRESSION ';' STATEMENT_LIST1 
int id ; id = 'num' TERM1 SIMPLE_EXPRESSION1 EXPRESSIONSIMPLE_EXPRESSION ';' STATEMENT_LIST1 
int id ; id = num TERM1 SIMPLE_EXPRESSION1 EXPRESSIONSIMPLE_EXPRESSION ';' STATEMENT_LIST1 
int id ; id = num SIMPLE_EXPRESSION1 EXPRESSIONSIMPLE_EXPRESSION ';' STATEMENT_LIST1 
int id ; id = num EXPRESSIONSIMPLE_EXPRESSION ';' STATEMENT_LIST1 
int id ; id = num ';' STATEMENT_LIST1 
int id ; id = num ; STATEMENT_LIST1 
int id ; id = num ; STATEMENT STATEMENT_LIST1 
int id ; id = num ; IF STATEMENT_LIST1 
int id ; id = num ; 'if' '(' EXPRESSION ')' '{' STATEMENT '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if '(' EXPRESSION ')' '{' STATEMENT '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( EXPRESSION ')' '{' STATEMENT '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( SIMPLE_EXPRESSION EXPRESSIONSIMPLE_EXPRESSION ')' '{' STATEMENT '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( TERM SIMPLE_EXPRESSION1 EXPRESSIONSIMPLE_EXPRESSION ')' '{' STATEMENT '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( FACTOR TERM1 SIMPLE_EXPRESSION1 EXPRESSIONSIMPLE_EXPRESSION ')' '{' STATEMENT '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( 'id' TERM1 SIMPLE_EXPRESSION1 EXPRESSIONSIMPLE_EXPRESSION ')' '{' STATEMENT '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id TERM1 SIMPLE_EXPRESSION1 EXPRESSIONSIMPLE_EXPRESSION ')' '{' STATEMENT '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id SIMPLE_EXPRESSION1 EXPRESSIONSIMPLE_EXPRESSION ')' '{' STATEMENT '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id EXPRESSIONSIMPLE_EXPRESSION ')' '{' STATEMENT '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id 'relop' SIMPLE_EXPRESSION ')' '{' STATEMENT '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id relop SIMPLE_EXPRESSION ')' '{' STATEMENT '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id relop TERM SIMPLE_EXPRESSION1 ')' '{' STATEMENT '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id relop FACTOR TERM1 SIMPLE_EXPRESSION1 ')' '{' STATEMENT '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id relop 'num' TERM1 SIMPLE_EXPRESSION1 ')' '{' STATEMENT '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id relop num TERM1 SIMPLE_EXPRESSION1 ')' '{' STATEMENT '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id relop num SIMPLE_EXPRESSION1 ')' '{' STATEMENT '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id relop num ')' '{' STATEMENT '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id relop num ) '{' STATEMENT '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id relop num ) { STATEMENT '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id relop num ) { ASSIGNMENT '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id relop num ) { 'id' '=' EXPRESSION ';' '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id relop num ) { id '=' EXPRESSION ';' '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
Error parsing: = is missing. Inserting
int id ; id = num ; if ( id relop num ) { id = EXPRESSION ';' '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
Error parsing: Illegal EXPRESSION. Discarding assign.
int id ; id = num ; if ( id relop num ) { id = EXPRESSION ';' '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id relop num ) { id = SIMPLE_EXPRESSION EXPRESSIONSIMPLE_EXPRESSION ';' '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id relop num ) { id = TERM SIMPLE_EXPRESSION1 EXPRESSIONSIMPLE_EXPRESSION ';' '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id relop num ) { id = FACTOR TERM1 SIMPLE_EXPRESSION1 EXPRESSIONSIMPLE_EXPRESSION ';' '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id relop num ) { id = 'num' TERM1 SIMPLE_EXPRESSION1 EXPRESSIONSIMPLE_EXPRESSION ';' '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id relop num ) { id = num TERM1 SIMPLE_EXPRESSION1 EXPRESSIONSIMPLE_EXPRESSION ';' '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id relop num ) { id = num SIMPLE_EXPRESSION1 EXPRESSIONSIMPLE_EXPRESSION ';' '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id relop num ) { id = num EXPRESSIONSIMPLE_EXPRESSION ';' '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id relop num ) { id = num ';' '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id relop num ) { id = num ; '}' 'else' '{' STATEMENT '}' STATEMENT_LIST1 
int id ; id = num ; if ( id relop num ) { id = num ; } 'else' '{' STATEMENT '}' STATEMENT_LIST1 
Error parsing: else is missing. Inserting
int id ; id = num ; if ( id relop num ) { id = num ; } else '{' STATEMENT '}' STATEMENT_LIST1 
Error parsing: { is missing. Inserting
int id ; id = num ; if ( id relop num ) { id = num ; } else { STATEMENT '}' STATEMENT_LIST1 
Error parsing: SYNCH entry. Popping STATEMENT
int id ; id = num ; if ( id relop num ) { id = num ; } else { '}' STATEMENT_LIST1 
Error parsing: } is missing. Inserting
int id ; id = num ; if ( id relop num ) { id = num ; } else { } STATEMENT_LIST1 
int id ; id = num ; if ( id relop num ) { id = num ; } else { } 